.full-screen-container {
  display: flex;
  flex-direction: column;
  height: 90vh;
  overflow: hidden;
}

.tiles-container {
  display: flex;
  gap: 20px;
  flex: 1;
  padding: 20px;
  box-sizing: border-box;
}

.big-tile, .small-tiles-container {
  flex: 1;
  background-color: #FFFDE0;
  border-radius: 20px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  padding: 20px;
  display: flex;
  flex-direction: column;
  overflow-y: auto;
}

.class-list {
  max-height: 200px; /* Restrict height and enable scrolling for overflow */
  overflow-y: auto; /* Add vertical scrolling if the list exceeds max height */
  background-color: #fff; /* White background for contrast */
  border: 1px solid #ddd; /* Light border for a clean look */
  border-radius: 10px; /* Rounded corners */
  padding: 10px; /* Space around the list items */
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Subtle shadow for depth */
}

.class-list ul {
  list-style-type: none; /* Remove default list bullets */
  padding: 0;
  margin: 0;
}

.class-item {
  display: flex;
  align-items: center;
  padding: 8px;
  border-bottom: 1px solid #eee; /* Light divider between items */
  transition: background-color 0.2s;
}

.class-item:last-child {
  border-bottom: none; /* Remove border for the last item */
}

.class-item label {
  display: flex;
  align-items: center;
  cursor: pointer; /* Indicate clickability */
  font-size: 14px;
  color: #333; /* Darker text color for better readability */
}

.class-item input[type="checkbox"] {
  margin-right: 10px; /* Add spacing between checkbox and text */
}

.class-item:hover {
  background-color: #f9f9f9; /* Subtle hover effect for better UX */
}


.questions-section {
  margin-top: 20px;
}

.questions-category {
  margin-bottom: 20px;
}

.questions-category h4 {
  margin-bottom: 10px;
  font-size: 18px;
  font-weight: bold;
  color: #333;
}

.questions-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  gap: 15px;
}

.question-box {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px;
  border: 2px solid #f5c000;
  border-radius: 10px;
  background-color: #ffffff;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  max-height: 100px; /* Limit height */
  overflow: hidden;
  position: relative; /* Position elements properly */
}

.question-content {
  flex: 1; /* Allow content to expand */
  white-space: nowrap; /* Prevent wrapping */
  overflow: hidden; /* Hide overflowing text */
  text-overflow: ellipsis; /* Show ellipsis for overflow */
}

.action-icons {
  margin-left: 10px; /* Add space between content and icons */
}

.action-icons i {
  font-size: 18px;
  color: #ff0000; /* Red for delete icon */
  cursor: pointer;
}

.action-icons i:hover {
  color: #d00000; /* Darker red on hover */
  transform: scale(1.1); /* Slightly larger on hover */
}


.question-content {
  flex: 1;
}


.question-box p {
  margin: 0 0 10px 0;
  font-size: 14px;
  white-space: nowrap; /* Prevent text wrapping */
  overflow: hidden; /* Hide overflowing text */
  text-overflow: ellipsis; /* Add "..." for overflowing text */
}

.question-box ul {
  list-style-type: none;
  padding: 0;
  margin: 0;
}

.question-box ul li {
  font-size: 14px;
  color: #555;
}

.question-box:hover {
  transform: translateY(-5px);
  box-shadow: 0 6px 10px rgba(0, 0, 0, 0.2);
}

.yellow-button {
  background-color: #F5C000;
  border: none;
  color: black;
  padding: 10px 20px;
  font-size: 16px;
  font-weight: bold;
  border-radius: 20px;
  cursor: pointer;
  transition: background-color 0.3s, transform 0.2s;
}

.yellow-button:hover {
  background-color: #FFD54F;
  transform: scale(1.05);
}

.yellow-button:active {
  background-color: #FBC02D;
  transform: scale(0.95);
}

.section-divider {
  border: 0;
  height: 1px;
  background-color: #ccc; /* Light gray for a subtle look */
  margin: 20px 0;
}

.questions-category h4 {
  margin-top: 10px;
  margin-bottom: 15px;
  font-size: 18px;
  font-weight: bold;
  color: #333;
}

.tile-header {
  display: flex;
  justify-content: space-between; /* Align buttons on opposite sides */
  align-items: flex-end; /* Align buttons to the bottom */
  margin-top: auto; /* Push the container to the bottom */
  position: relative;
}

.button-container {
  display: flex;
  justify-content: space-between; /* Align buttons on opposite sides */
  align-items: flex-end; /* Align buttons to the bottom */
  margin-top: auto; /* Push the container to the bottom */
  padding-top: 20px; /* Add some space above the buttons */
}
